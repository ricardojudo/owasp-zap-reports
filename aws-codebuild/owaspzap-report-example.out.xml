<?xml version="1.0" encoding="UTF-8"?><testsuite xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="https://www.example.com" tests="7" failures="7" errors="0" skipped="0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><properties><property name="name" value="https://www.example.com"/><property name="host" value="www.example.com"/><property name="port" value="443"/><property name="ssl" value="true"/><property name="version" value="2.10.0"/><property name="generated" value="Sat, 27 Feb 2021 02:47:36"/></properties><testcase time="0.0" name="Strict-Transport-Security Header Not Set"><failure type="Low (High)" message="AlertRef - 10035. Message - &lt;p&gt;HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.&lt;/p&gt;. Solution - &lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.&lt;/p&gt;. URLs - GET - https://www.example.com; GET - https://www.example.com/; GET - https://www.example.com/robots.txt; GET - https://www.example.com/sitemap.xml; "/></testcase><testcase time="0.0" name="X-Content-Type-Options Header Missing"><failure type="Low (Medium)" message="AlertRef - 10021. Message - &lt;p&gt;The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.&lt;/p&gt;. Solution - &lt;p&gt;Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.&lt;/p&gt;&lt;p&gt;If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.&lt;/p&gt;. URLs - GET - https://www.example.com/; GET - https://www.example.com; "/></testcase><testcase time="0.0" name="Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field"><failure type="Low (High)" message="AlertRef - 10036. Message - &lt;p&gt;The web/application server is leaking version information via the &quot;Server&quot; HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.&lt;/p&gt;. Solution - &lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to suppress the &quot;Server&quot; header or provide generic details.&lt;/p&gt;. URLs - GET - https://www.example.com/; GET - https://www.example.com/sitemap.xml; GET - https://www.example.com/robots.txt; GET - https://www.example.com/; GET - https://www.example.com; "/></testcase><testcase time="0.0" name="Retrieved from Cache"><failure type="Informational (Medium)" message="AlertRef - 10050. Message - &lt;p&gt;The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as &quot;proxy&quot; caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. &lt;/p&gt;. Solution - &lt;p&gt;Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:&lt;/p&gt;&lt;p&gt;Cache-Control: no-cache, no-store, must-revalidate, private&lt;/p&gt;&lt;p&gt;Pragma: no-cache&lt;/p&gt;&lt;p&gt;Expires: 0&lt;/p&gt;&lt;p&gt;This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.&lt;/p&gt;. URLs - GET - https://www.example.com; GET - https://www.example.com/; GET - https://www.example.com/robots.txt; GET - https://www.example.com/sitemap.xml; "/></testcase><testcase time="0.0" name="Content Security Policy (CSP) Header Not Set"><failure type="Medium (High)" message="AlertRef - 10038. Message - &lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;. Solution - &lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: &quot;Content-Security-Policy&quot; for Chrome 25+, Firefox 23+ and Safari 7+, &quot;X-Content-Security-Policy&quot; for Firefox 4.0+ and Internet Explorer 10+, and &quot;X-WebKit-CSP&quot; for Chrome 14+ and Safari 6+.&lt;/p&gt;. URLs - GET - https://www.example.com/sitemap.xml; GET - https://www.example.com/; GET - https://www.example.com; GET - https://www.example.com/robots.txt; "/></testcase><testcase time="0.0" name="X-Frame-Options Header Not Set"><failure type="Medium (Medium)" message="AlertRef - 10020. Message - &lt;p&gt;X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.&lt;/p&gt;. Solution - &lt;p&gt;Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's &quot;frame-ancestors&quot; directive. &lt;/p&gt;. URLs - GET - https://www.example.com/; GET - https://www.example.com; "/></testcase><testcase time="0.0" name="Incomplete or No Cache-control and Pragma HTTP Header Set"><failure type="Low (Medium)" message="AlertRef - 10015. Message - &lt;p&gt;The cache-control and pragma HTTP header have not been set properly or are missing allowing the browser and proxies to cache content.&lt;/p&gt;. Solution - &lt;p&gt;Whenever possible ensure the cache-control HTTP header is set with no-cache, no-store, must-revalidate; and that the pragma HTTP header is set with no-cache.&lt;/p&gt;. URLs - GET - https://www.example.com/; GET - https://www.example.com; "/></testcase></testsuite>